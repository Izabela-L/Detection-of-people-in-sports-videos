# -*- coding: utf-8 -*-
"""YOLOv5 custom data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18M4_LtQXk-tOsOZXaZQSoojmD4AGt3XX
"""

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/ultralytics/yolov5  
# %cd yolov5
# %pip install -qr requirements.txt 
# %pip install -q roboflow

import torch
import os

print(f"Setup complete. Using torch {torch.__version__} ({torch.cuda.get_device_properties(0).name if torch.cuda.is_available() else 'CPU'})")

from roboflow import Roboflow
rf = Roboflow(model_format="yolov5", notebook="ultralytics")

os.environ["DATASET_DIRECTORY"] = "/content/yolov5/ff-1"

rf = Roboflow(api_key="E9ecyBX8LYTK9mmEkB8X")
project = rf.workspace("fffff-m2css").project("ff-ucc3i")
dataset = project.version(1).download("yolov5")

!python train.py --img 640 --batch 16 --epochs 100 --data {dataset.location}/data.yaml --weights '' --cfg /content/yolov5/models/yolov5s.yaml --cache

# Commented out IPython magic to ensure Python compatibility.
# %load_ext tensorboard
# %tensorboard --logdir runs

from google.colab import drive
drive.mount('/content/drive')

!python detect.py --weights runs/train/exp/weights/best.pt --img 640 --conf 0.1 --source {dataset.location}/test/images

!zip -r /content/trainfromscratch_detect_1.zip /content/yolov5/runs/detect/exp/
files.download('/content/trainfromscratch_detect_1.zip')

!python detect.py --weights runs/train/exp/weights/best.pt --conf 0.1 --source /content/drive/MyDrive/DSC_2470.MOV

!zip -r /content/trainfromscratch_detect_1_video.zip /content/yolov5/runs/detect/exp2/
files.download('/content/trainfromscratch_detect_1_video.zip')

!python train.py --img 640 --batch 16 --epochs 100 --data {dataset.location}/data.yaml --weights yolov5s.pt --cache --freeze 10 --name 'feature_extraction'

!zip -r /content/runFeatureExtraction.zip /content/yolov5/runs/train/feature_extraction
files.download('/content/runFeatureExtraction.zip')

!python train.py --hyp 'hyp.VOC.yaml' --batch 16 --epochs 100 --data '/content/yolov5/ff-1/ff-1/data.yaml' --weights '/content/yolov5/runs/train/feature_extraction/weights/best.pt'  --name 'fine_tune' --cache

!python val.py --weights /content/yolov5/runs/fine_tune/weights/best.pt --data /content/datasets/ff-1/data.yaml  --img 640 --task test --name val_test_finetune

!python detect.py --weights /content/yolov5/runs/fine_tune/weights/best.pt --img 640 --conf 0.1 --source {dataset.location}/test/images

!python detect.py --weights /content/yolov5/runs/fine_tune/weights/best.pt --img 640 --conf 0.1 --source /content/drive/MyDrive/DSC_2470.MOV